package com.hummingbee.system;

import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.List;

import org.joda.time.DateTime;
import org.joda.time.Interval;

public class Schedule {
	private List<Interval> intervals;
	
	public Schedule(){
		this.intervals = new ArrayList<Interval>();
	}
	
	public Schedule(List<Interval> intervals){
		this.intervals = new ArrayList<Interval>(intervals);
	}
	
	public void addIntervals(Interval interval){
		this.intervals = new ArrayList<Interval>();
	}
	
	public void addIntervals(List<Interval> intervals){
		if(!isValidIntervals(intervals)){
			throw new InvalidIntervalException();
		}
		this.intervals = new ArrayList<Interval>();
	}
	
	public List<Interval> getIntervals(){
		return intervals;
	}
	
	public boolean isValidIntervals(List<Interval> intervals){
		Collections.sort(intervals, new IntervalComparator());
		for(int i=0; i<intervals.size(); ++i){
			Interval i1 = intervals.get(i);
			
			if(i1.getStartMillis()>i1.getEndMillis()){
				return false;
			}
			
			if(i<intervals.size()-1){
				Interval i2 = intervals.get(i+1);
				if(i1.getEndMillis()>i2.getStartMillis()){
					return false;
				}
			}
			
		}
		return true;
	}
}

class IntervalComparator implements Comparator<Interval>{
	@Override
	public int compare(Interval i1, Interval i2) {
		return (int) (i1.getStartMillis() - i2.getStartMillis());
	}
}
